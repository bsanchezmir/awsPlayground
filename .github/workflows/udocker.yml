name: Check Dockerfile Base Image Updates

on:
  schedule:
    - cron: '0 0 * * *'  # Run daily
  workflow_dispatch:

jobs:
  check-updates:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check for base image updates
        run: |
          # Read the current base image from the Dockerfile
          BASE_IMAGE=$(grep -oP 'FROM \K.*' Dockerfile)
          echo "Base image from Dockerfile: $BASE_IMAGE"
          
          # Extract image namespace, repository, and current tag
          REPOSITORY=$(echo "$BASE_IMAGE" | cut -d'/' -f2 | cut -d':' -f1)
          CURRENT_TAG=$(echo "$BASE_IMAGE" | cut -d':' -f2)
          echo "Repository: $REPOSITORY, Current tag: $CURRENT_TAG"

          # Use the Docker Hub v2 API to fetch tags
          TAGS_JSON=$(wget -q -O - "https://hub.docker.com/v2/namespaces/repositories/$REPOSITORY/tags?page_size=100")
          echo "Tags JSON from Docker Hub for $REPOSITORY:"
          echo "$TAGS_JSON"

          # Parse the tags to find the latest one
          LATEST_TAG=$(echo "$TAGS_JSON" | jq -r ".results[] | select(.name | startswith(\"$CURRENT_TAG\")).name" | sort -V | tail -n1)
          
          echo "Latest tag found: $LATEST_TAG"
          if [ "$CURRENT_TAG" != "$LATEST_TAG" ] && [ -n "$LATEST_TAG" ]; then
            echo "A newer base image tag is available: $LATEST_TAG"
            # Update Dockerfile with the new tag
            sed -i "s|$BASE_IMAGE|$NAMESPACE/$REPOSITORY:$LATEST_TAG|g" Dockerfile
            
            # Check the Dockerfile after the sed operation
            echo "Dockerfile updated content:"
            cat Dockerfile
            
            # Set environment variables for subsequent steps
            echo "updated=true" >> $GITHUB_ENV
            echo "new_tag=$LATEST_TAG" >> $GITHUB_ENV
          else
            echo "No updates found. Current tag ($CURRENT_TAG) is up-to-date."
            echo "updated=false" >> $GITHUB_ENV
          fi

      - name: Push changes and create a pull request
        if: env.updated == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: Update Dockerfile to ${{ env.new_tag }}
          title: Update base image to ${{ env.new_tag }}
          body: |
            This is an automated PR to update the Dockerfile base image to ${{ env.new_tag }}.
          branch: update-base-image-${{ env.new_tag }}
