name: Check Dockerfile Base Image Updates

on:
  schedule:
    - cron: '0 0 * * *'  # Run daily
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  check-updates:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Check for base image updates
      id: check
      run: |
        # Read the current base image from the Dockerfile
        BASE_IMAGE=$(grep -oP 'FROM \K.*' Dockerfile)
        IMAGE_NAME=$(echo $BASE_IMAGE | cut -d':' -f1)
        CURRENT_TAG=$(echo $BASE_IMAGE | cut -d':' -f2)
        LATEST_TAG=$(wget -q https://registry.hub.docker.com/v1/repositories/$IMAGE_NAME/tags -O - | jq -r '[.[] | select(.name | startswith("$CURRENT_TAG")) | .name] | max_by(split(".") | map(tonumber))')

        if [ "$CURRENT_TAG" != "$LATEST_TAG" ]; then
          echo "A newer base image tag is available: $LATEST_TAG"
          echo "Current tag is: $CURRENT_TAG"
          echo "Updating Dockerfile..."
          sed -i "s|$BASE_IMAGE|$IMAGE_NAME:$LATEST_TAG|g" Dockerfile
          
          # Use environment file to set the output
          echo "updated=true" >> $GITHUB_ENV
          echo "new_tag=$LATEST_TAG" >> $GITHUB_ENV
        else
          echo "No updates found. Current tag ($CURRENT_TAG) is up-to-date."
          echo "updated=false" >> $GITHUB_ENV
        fi

    - name: Push changes and create a pull request
      if: env.updated == 'true'
      uses: peter-evans/create-pull-request@v6
      with:
        commit-message: Update Dockerfile to ${{ env.new_tag }}
        title: Update base image to ${{ env.new_tag }}
        body: |
          This is an automated PR to update the Dockerfile base image to ${{ env.new_tag }}.
        branch: update-base-image-${{ env.new_tag }}
